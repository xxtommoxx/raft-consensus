syntax = "proto3";

package rpc;

message VoteRequest {
	uint32 term = 1;

	uint32 last_log_index = 2;
	uint32 last_log_term = 3;

	string candidate_id = 4;
}

message VoteResponse {
	uint32 term = 1;
	bool vote_granted = 2;
}

message LeaderInfo {
	uint32 term = 1;

	uint32 prev_log_index = 2;
	uint32 prev_log_term = 3;

	uint32 commit_index = 4;

	string leader_id = 5;
}

message KeepAliveRequest {
	LeaderInfo leader_info = 1;
}

message KeepAliveResponse {
	uint32 term = 1;
}

message AppendConfigEntryRequest {
	LeaderInfo leader_info = 1;

	map<string, Node> node_locations = 2;
	message Node {
			string host = 1;
			uint32 port = 2;
			string id = 3;
	}
}

message AppendLogEntryRequest {
	LeaderInfo leader_info = 1;

	repeated LogEntry entries = 2;
	message LogEntry {
		string cmd = 1;
		bytes value = 2;
	}
}

message AppendEntryResponse {
	uint32 term = 1;
	bool success = 2;
}

message InstallSnapshotRequest {
	uint32 term = 1;

	string leader_id = 2;

	uint32 last_included_index = 3;
	uint32 last_included_term = 4;

	uint32 offset = 5;
	bytes data = 6;

	bool done = 7;
}

message InstallSnapshotResponse {
	uint32 term = 1;
}

service RpcService {

	rpc KeepAlive(KeepAliveRequest) returns (KeepAliveResponse);

	rpc AppendLogEntries(AppendLogEntryRequest) returns (AppendEntryResponse);
	rpc UpdateConfiguration(AppendConfigEntryRequest) returns (AppendEntryResponse);

	rpc ElectLeader(VoteRequest) returns (VoteResponse);

	rpc InstallSnapshot(InstallSnapshotRequest) returns (InstallSnapshotResponse);
}

